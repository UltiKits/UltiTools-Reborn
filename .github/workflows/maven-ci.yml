name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file UltiTools-API/pom.xml
    - name: Get latest commit message
      id: commit
      run: echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.sha }})"
    - name: Install xmlstarlet
      run: sudo apt-get update && sudo apt-get install -y xmlstarlet
    - name: Get version
      id: version
      run: echo "::set-output name=version::$(xmlstarlet sel -t -v '/project/version' UltiTools-API/pom.xml)"
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release v${{ steps.version.outputs.version }}
        body: ${{ steps.commit.outputs.message }}
        draft: true
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: UltiTools-API/target/UltiTools-API-${{ steps.version.outputs.version }}.jar
        asset_name: UltiTools-API.jar
        asset_content_type: application/java-archive
